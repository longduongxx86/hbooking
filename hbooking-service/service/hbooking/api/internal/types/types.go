// Code generated by goctl. DO NOT EDIT.
package types

type LoginReq struct {
	UserName string `json:"user_name"` // user_name
	Password string `json:"password"`  //  password
}

type LoginData struct {
	User  User   `json:"user"`  // Account info
	Token string `json:"token"` // jwt token for api
}

type LoginRes struct {
	Code    int       `json:"code"`    //    Result code: 0 is success. Otherwise, getting an error
	Message string    `json:"message"` // Result message: detail response code
	Data    LoginData `json:"data"`
}

type RegisterReq struct {
	UserName    string `json:"user_name"`
	Password    string `json:"password"`
	Email       string `json:"email"`
	PhoneNumber string `json:"phone_number"`
	FullName    string `json:"full_name"`
	Gender      int    `json:"gender"` // 1: male, 2: female, 4: other
}

type RegisterData struct {
	User  User   `json:"user"`  // Account info
	Token string `json:"token"` // jwt token for api
}

type RegisterRes struct {
	Code    int          `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string       `json:"message"` // Result message: detail response code
	Data    RegisterData `json:"data"`
}

type ForgetPasswordReq struct {
	UserName string `json:"user_name,optional"`
	Email    string `json:"email,optional"`
}

type ForgetPasswordRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type VerifyEmailNoAuthReq struct {
	Email string `form:"email"`
	Token string `form:"token"`
}

type VerifyEmailNoAuthRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type VerifyEmailReq struct {
	Email string `form:"email"`
	Token string `form:"token"`
}

type VerifyEmailRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type ResetPasswordReq struct {
	UserName string `json:"user_name"`
	Password string `json:"password"`
}

type ResetPasswordRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type GetUserReq struct {
	UserId int64 `path:"user_id"`
}

type GetUserData struct {
	User User `json:"user"`
}

type GetUserRes struct {
	Code    int         `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string      `json:"message"` // Result message: detail response code
	Data    GetUserData `json:"data"`
}

type GetUsersReq struct {
	Email  string `form:"email,optional"`
	Limit  int    `form:"limit"`  // number order per page limit = 0 get all
	Offset int    `form:"offset"` // offset of page
}

type GetUsersData struct {
	Users []User `json:"users"`
}

type GetUsersRes struct {
	Code    int          `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string       `json:"message"` // Result message: detail response code
	Data    GetUsersData `json:"data"`
}

type UpdateUserReq struct {
	UserId      int64  `path:"user_id"`
	PhoneNumber string `form:"phone_number"`
	Gender      int    `form:"gender"`
	FullName    string `form:"full_name"`
}

type UpdateUserData struct {
	User User `json:"user"`
}

type UpdateUserRes struct {
	Code    int            `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string         `json:"message"` // Result message: detail response code
	Data    UpdateUserData `json:"data"`
}

type AddHomestayReq struct {
	Name        string `form:"name"`
	UserId      int64  `form:"user_id"`
	Description string `form:"description"`
	Ward        int    `form:"ward"`
	District    int    `form:"district"`
	Province    int    `form:"province"`
}

type AddHomestayData struct {
	Homestay Homestay `json:"homestay"`
}

type AddHomestayRes struct {
	Code    int             `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string          `json:"message"` // Result message: detail response code
	Data    AddHomestayData `json:"data"`
}

type GetHomestayReq struct {
	HomestayId int64 `path:"homestay_id"`
}

type GetHomestayData struct {
	Homestay Homestay `json:"homestay"`
}

type GetHomestayRes struct {
	Code    int             `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string          `json:"message"` // Result message: detail response code
	Data    GetHomestayData `json:"data"`
}

type GetHomestaysReq struct {
	Name     string `form:"name,optional"`
	Ward     int    `form:"ward,optional"`
	District int    `form:"district,optional"`
	Province int    `form:"province,optional"`
	Limit    int    `form:"limit,optional"`  // number order per page limit = 0 get all
	Offset   int    `form:"offset,optional"` // offset of page
}

type GetHomestaysData struct {
	Homestays []Homestay `json:"homestays"`
}

type GetHomestaysRes struct {
	Code    int              `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string           `json:"message"` // Result message: detail response code
	Data    GetHomestaysData `json:"data"`
}

type UpdateHomestayReq struct {
	HomestayId  int64  `path:"homestay_id"`
	UserId      int64  `json:"user_id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Ward        int    `json:"ward"`
	District    int    `json:"district"`
	Province    int    `json:"province"`
}

type UpdateHomestayData struct {
	Homestay Homestay `json:"homestay"`
}

type UpdateHomestayRes struct {
	Code    int                `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string             `json:"message"` // Result message: detail response code
	Data    UpdateHomestayData `json:"data"`
}

type DeleteHomestayReq struct {
	HomestayId int64 `path:"homestay_id"`
}

type DeleteHomestayRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type AddServiceReq struct {
	ServiceName string  `json:"service_name"`
	Description string  `json:"description"`
	Price       float64 `json:"price"`
}

type AddServiceData struct {
	Service Service `json:"service"`
}

type AddServiceRes struct {
	Code    int            `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string         `json:"message"` // Result message: detail response code
	Data    AddServiceData `json:"data"`
}

type GetServiceReq struct {
	ServiceId int64 `path:"service_id"`
}

type GetServiceData struct {
	Service Service `json:"service"`
}

type GetServiceRes struct {
	Code    int            `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string         `json:"message"` // Result message: detail response code
	Data    GetServiceData `json:"data"`
}

type GetServicesReq struct {
	ServiceName string  `form:"service_name,optional"`
	PriceFrom   float64 `form:"price_from,optional"`
	PriceTo     float64 `form:"price_to,optional"`
	Limit       int     `form:"limit,optional"`  // number order per page limit = 0 get all
	Offset      int     `form:"offset,optional"` // offset of page
}

type GetServicesData struct {
	Services []Service `json:"services"`
}

type GetServicesRes struct {
	Code    int             `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string          `json:"message"` // Result message: detail response code
	Data    GetServicesData `json:"data"`
}

type UpdateServiceReq struct {
	ServiceId   int64  `path:"service_id"`
	ServiceName string `json:"service_name"`
	Description string `json:"description"`
	Price       int    `json:"price"`
}

type UpdateServiceData struct {
	Service Service `json:"service"`
}

type UpdateServiceRes struct {
	Code    int               `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string            `json:"message"` // Result message: detail response code
	Data    UpdateServiceData `json:"data"`
}

type DeleteServiceReq struct {
	ServiceId int64 `path:"service_id"`
}

type DeleteServiceRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type AddReviewReq struct {
	UserId     int    `json:"user_id"`
	HomestayId string `json:"homestay_id"`
	Rate       int    `json:"rate"` // max 5
	Comment    string `json:"comment"`
}

type AddReviewData struct {
	Review Review `json:"review"`
}

type AddReviewRes struct {
	Code    int           `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string        `json:"message"` // Result message: detail response code
	Data    AddReviewData `json:"data"`
}

type GetReviewReq struct {
	ReviewId int64 `path:"review_id"`
}

type GetReviewData struct {
	Review Review `json:"review"`
}

type GetReviewRes struct {
	Code    int           `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string        `json:"message"` // Result message: detail response code
	Data    GetReviewData `json:"data"`
}

type GetReviewsByHomestayIdReq struct {
	HomestayId int64 `path:"homestay_id"`
	Limit      int   `form:"limit,optional"`  // number order per page limit = 0 get all
	Offset     int   `form:"offset,optional"` // offset of page
}

type UserOfReview struct {
	UserId   int64  `json:"user_id"`
	FullName string `json:"username"`
	Avatar   string `json:"avatar"`
}

type ReviewsByHomestayId struct {
	ReviewID   int64        `json:"review_id"`
	User       UserOfReview `json:"user"`
	HomestayID int64        `json:"homestay_id"`
	Rate       int          `json:"rate"`
	Comment    string       `json:"comment"`
	CreatedAt  int64        `json:"created_at"`
	UpdatedAt  int64        `json:"updated_at"`
}

type GetReviewsByHomestayIdData struct {
	Reviews []ReviewsByHomestayId `json:"reviews"`
}

type GetReviewsByHomestayIdRes struct {
	Code    int                        `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string                     `json:"message"` // Result message: detail response code
	Data    GetReviewsByHomestayIdData `json:"data"`
}

type UpdateReviewReq struct {
	ReviewId int64  `path:"service_id"`
	Rate     int    `json:"rate"` // max 5
	Comment  string `json:"comment"`
}

type UpdateReviewData struct {
	Review Review `json:"review"`
}

type UpdateReviewRes struct {
	Code    int              `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string           `json:"message"` // Result message: detail response code
	Data    UpdateReviewData `json:"data"`
}

type DeleteReviewReq struct {
	ReviewId int64 `path:"service_id"`
}

type DeleteReviewRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type AddBookingReq struct {
	UserId       int64   `json:"user_id"`
	RoomId       int64   `json:"room_id"`
	CheckInDate  int64   `json:"check_in_date"`
	CheckOutDate int64   `json:"check_out_date"`
	DepositPrice float64 `json:"deposit_price"`
	TotalPrice   float64 `json:"total_price"`
	Status       int     `json:"status"`
}

type AddBookingData struct {
	Booking Booking `json:"booking"`
}

type AddBookingRes struct {
	Code    int            `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string         `json:"message"` // Result message: detail response code
	Data    AddBookingData `json:"data"`
}

type GetBookingReq struct {
	BookingId int64 `path:"booking_id"`
}

type GetBookingData struct {
	Booking Booking `json:"booking"`
}

type GetBookingRes struct {
	Code    int            `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string         `json:"message"` // Result message: detail response code
	Data    GetBookingData `json:"data"`
}

type GetBookingsReq struct {
	RoomId       int64 `form:"room_id,optional"`
	UserId       int64 `form:"user_id,optional"`
	CheckInDate  int64 `form:"check_in_date,optional"`
	CheckOutDate int64 `form:"check_out_date,optional"`
	Limit        int   `form:"limit,optional"`  // number order per page limit = 0 get all
	Offset       int   `form:"offset,optional"` // offset of page
}

type GetBookingsData struct {
	Bookings []Booking `json:"bookings"`
}

type GetBookingsRes struct {
	Code    int             `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string          `json:"message"` // Result message: detail response code
	Data    GetBookingsData `json:"data"`
}

type UpdateBookingReq struct {
	BookingId    int64   `path:"booking_id"`
	UserId       int64   `json:"user_id"`
	RoomId       int64   `json:"room_id"`
	CheckInDate  int64   `json:"check_in_date"`
	CheckOutDate int64   `json:"check_out_date"`
	DepositPrice float64 `json:"deposit_price"`
	TotalPrice   float64 `json:"total_price"`
	Status       int     `json:"status"`
}

type UpdateBookingData struct {
	Booking Booking `json:"booking"`
}

type UpdateBookingRes struct {
	Code    int               `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string            `json:"message"` // Result message: detail response code
	Data    UpdateBookingData `json:"data"`
}

type DeleteBookingReq struct {
	BookingId int64 `path:"booking_id"`
}

type DeleteBookingRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type AddRoomReq struct {
	HomestayID int64   `form:"homestay_id"`
	RoomName   string  `form:"room_name"`
	RoomType   int     `form:"room_type,options=1|2"`
	Price      float64 `form:"price"`
	Status     int     `form:"status"`
}

type AddRoomData struct {
	Room Room `json:"room"`
}

type AddRoomRes struct {
	Code    int         `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string      `json:"message"` // Result message: detail response code
	Data    AddRoomData `json:"data"`
}

type GetRoomReq struct {
	RoomId int64 `path:"room_id"`
}

type GetRoomData struct {
	Room Room `json:"room"`
}

type GetRoomRes struct {
	Code    int         `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string      `json:"message"` // Result message: detail response code
	Data    GetRoomData `json:"data"`
}

type GetRoomsReq struct {
	RoomName  string  `form:"room_name,optional"`
	RoomType  int     `form:"room_type,optional"`
	PriceFrom float64 `form:"price_from,optional"`
	PriceTo   float64 `form:"price_to,optional"`
	Status    int     `form:"status,optional"`
	Limit     int     `form:"limit,optional"`  // number order per page limit = 0 get all
	Offset    int     `form:"offset,optional"` // offset of page
}

type GetRoomsData struct {
	Rooms []Room `json:"rooms"`
}

type GetRoomsRes struct {
	Code    int          `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string       `json:"message"` // Result message: detail response code
	Data    GetRoomsData `json:"data"`
}

type UpdateRoomReq struct {
	RoomId     int64   `path:"room_id"`
	HomestayID int64   `json:"homestay_id"`
	RoomName   string  `json:"room_name"`
	RoomType   int     `json:"room_type,options=1|2"`
	Price      float64 `json:"price"`
	Status     int     `json:"status"`
}

type UpdateRoomData struct {
	Room Room `json:"room"`
}

type UpdateRoomRes struct {
	Code    int            `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string         `json:"message"` // Result message: detail response code
	Data    UpdateRoomData `json:"data"`
}

type DeleteRoomReq struct {
	RoomId int64 `path:"room_id"`
}

type DeleteRoomRes struct {
	Code    int    `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type UpdatePhotosReq struct {
	EntityId       int64  `form:"entity_id"`
	EntityType     int    `form:"entity_type"`
	DeletePhotoIds string `form:"delete_photo_ids,optional"` // list of photo id use to delete
}

type UpdatePhotosData struct {
	Photos []Photo `json:"photos"`
}

type UpdatePhotosRes struct {
	Code    int              `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string           `json:"message"` // Result message: detail response code
	Data    UpdatePhotosData `json:"data"`
}

type GetRevenueReq struct {
	HomestayIds string `form:"homestay_ids,optional"`
	UserId      int64  `form:"user_id,optional"`
	From        int64  `form:"from,optional"`
	To          int64  `form:"to,optional"`
	By          int    `form:"by"`   // 1: homestay_id, 2: user_id
	Mode        int    `form:"mode"` // 1: day, 2: month, 3: year
}

type GetRevenueData struct {
	Revenue Revenue `json:"revenue"`
}

type GetRevenueRes struct {
	Code    int            `json:"code"`    // Result code: 0 is success. Otherwise, getting an error
	Message string         `json:"message"` // Result message: detail response code
	Data    GetRevenueData `json:"data"`
}

type User struct {
	UserId      int64  `json:"user_id"`
	UserName    string `json:"user_name"`
	Email       string `json:"email"`
	PhoneNumber string `json:"phone_number"`
	Gender      int    `json:"gender"`
	FullName    string `json:"full_name"`
	Avatar      string `json:"avatar"`
	IsVerified  bool   `json:"is_verified"`
	Role        int    `json:"role"`
	CreatedAt   int64  `json:"created_at"`
	UpdatedAt   int64  `json:"updated_at"`
}

type Homestay struct {
	HomestayId  int64   `json:"homestay_id"`
	UserId      int64   `json:"user_id"`
	Name        string  `json:"name"`
	Description string  `json:"description"`
	Photos      []Photo `json:"photos"`
	Ward        int     `json:"ward"`
	District    int     `json:"district"`
	Province    int     `json:"province"`
	CreatedAt   int64   `json:"created_at"`
	UpdatedAt   int64   `json:"updated_at"`
}

type Room struct {
	RoomID    int64    `json:"room_id"`
	Homestay  Homestay `json:"homestay"`
	RoomName  string   `json:"room_name"`
	RoomType  int      `json:"room_type"`
	Photos    []Photo  `json:"photos"`
	Price     float64  `json:"price"`
	Status    int      `json:"status"`
	CreatedAt int64    `json:"created_at"`
	UpdatedAt int64    `json:"updated_at"`
}

type UserRoom struct {
	UserRoomID int64 `json:"user_room_id"`
	UserID     int64 `json:"user_id"`
	HomestayID int64 `json:"homestay_id"`
	CreatedAt  int64 `json:"created_at"`
	UpdatedAt  int64 `json:"updated_at"`
}

type Booking struct {
	BookingID    int64   `json:"booking_id"`
	User         User    `json:"user"`
	Room         Room    `json:"room"`
	CheckInDate  int64   `json:"check_in_date"`
	CheckOutDate int64   `json:"check_out_date"`
	DepositPrice float64 `json:"deposit_price"`
	TotalPrice   float64 `json:"total_price"`
	Status       int     `json:"status"`
	CreatedAt    int64   `json:"created_at"`
	UpdatedAt    int64   `json:"updated_at"`
}

type Service struct {
	ServiceID   int64   `json:"service_id"`
	ServiceName string  `json:"service_name"`
	Description string  `json:"description"`
	Price       float64 `json:"price"`
	CreatedAt   int64   `json:"created_at"`
	UpdatedAt   int64   `json:"updated_at"`
}

type Review struct {
	ReviewID   int64  `json:"review_id"`
	UserID     int64  `json:"user_id"`
	HomestayID int64  `json:"homestay_id"`
	Rate       int    `json:"rate"`
	Comment    string `json:"comment"`
	CreatedAt  int64  `json:"created_at"`
	UpdatedAt  int64  `json:"updated_at"`
}

type Photo struct {
	PhotoID    int64  `json:"photo_id"`
	EntityId   int64  `json:"entity_id"`
	Url        string `json:"url"`
	EntityType int    `json:"entity_type"`
	CreatedAt  int64  `json:"created_at"`
	UpdatedAt  int64  `json:"updated_at"`
}

type RevenueBreakdown struct {
	Day     int     `json:"day,optional"`
	Month   int     `json:"month,optional"`
	Year    int     `json:"year,optional"`
	Revenue float64 `json:"revenue,optional"`
}

type Revenue struct {
	Homestays         []Homestay         `json:"homestays"`
	User              User               `json:"user"`
	TotalRevenue      float64            `json:"total_revenue"`
	RevenueBreakdowns []RevenueBreakdown `json:"revenue_breakdowns"`
}
