// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"hbooking-service/service/hbooking/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/forget-password",
				Handler: ForgetPasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/verify-email",
				Handler: VerifyEmailNoAuthHandler(serverCtx),
			},
		},
		rest.WithPrefix("/hbooking"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/user/verify-email",
				Handler: VerifyEmailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/reset-password",
				Handler: ResetPasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/:user_id",
				Handler: GetUserHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user",
				Handler: GetUsersHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/user/:user_id",
				Handler: UpdateUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homestay",
				Handler: AddHomestayHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestay/:homestay_id",
				Handler: GetHomestayHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestay",
				Handler: GetHomestaysHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/homestay/:homestay_id",
				Handler: UpdateHomestayHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/homestay/:homestay_id",
				Handler: DeleteHomestayHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/service",
				Handler: AddServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/service/:service_id",
				Handler: GetServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/service",
				Handler: GetServicesHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/service/:service_id",
				Handler: UpdateServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/service/:service_id",
				Handler: DeleteServiceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/review",
				Handler: AddReviewHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/review/:review_id",
				Handler: GetReviewHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestay/:homestay_id/review",
				Handler: GetReviewsByHomestayIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/review/:review_id",
				Handler: UpdateReviewHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/review/:review_id",
				Handler: DeleteReviewHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/booking",
				Handler: AddBookingHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/booking/:booking_id",
				Handler: GetBookingHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/booking",
				Handler: GetBookingsHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/booking/:booking_id",
				Handler: UpdateBookingHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/booking/:booking_id",
				Handler: DeleteBookingHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/room",
				Handler: AddRoomHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/room/:room_id",
				Handler: GetRoomHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/room",
				Handler: GetRoomsHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/room/:room_id",
				Handler: UpdateRoomHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/room/:room_id",
				Handler: DeleteRoomHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/photos",
				Handler: UpdatePhotosHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/hbooking"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/revenue",
				Handler: GetRevenueHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/hbooking/report"),
	)
}
